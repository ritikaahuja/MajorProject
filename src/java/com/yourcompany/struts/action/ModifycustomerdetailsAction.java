/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;

import java.sql.SQLException;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.yourcompany.struts.form.ModifycustomerdetailsForm;

/**
 * MyEclipse Struts
 * Creation date: 08-21-2008
 *
 * XDoclet definition:
 * @struts.action path="/Modifycustomerdetails" name="modifycustomerdetailsForm" attribute="ModifycustomerdetailsForm" input="/Modifycustomerdetails.jsp" scope="request" validate="true"
 * @struts.action-forward name="sucess" path="/CustomerDetails.jsp"
 */
public class ModifycustomerdetailsAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws SQLException
	 * @throws ClassNotFoundException
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws SQLException, ClassNotFoundException {
		HttpSession session=request.getSession();
		ModifycustomerdetailsForm modifycustomerdetailsForm = (ModifycustomerdetailsForm) form;// TODO Auto-generated method stub
		Vector v=new Vector();
		String status="";
		String result="failure";
		String process=(String)session.getAttribute("process");
		String acc=(String)session.getAttribute("accountnumber");
		String name=modifycustomerdetailsForm.getName().trim();
		System.out.println("bsbsbs  "  +name);
		String dob=modifycustomerdetailsForm.getDob().trim();
		String age=modifycustomerdetailsForm.getAge().trim();
		String gender=modifycustomerdetailsForm.getGender().trim();
	    String address=modifycustomerdetailsForm.getAddress().trim();
		String occupation=modifycustomerdetailsForm.getOccupation().trim();
		String acctype=modifycustomerdetailsForm.getAcctype().trim();
		String contact=modifycustomerdetailsForm.getContact().trim();
		String accnumber=modifycustomerdetailsForm.getAccnumber().trim();
		String amount=modifycustomerdetailsForm.getAmount().trim();
		String password=modifycustomerdetailsForm.getPassword().trim();
		String cpassword=modifycustomerdetailsForm.getCpassword().trim();
		String type;
		v.add(name);
		v.add(dob);
		v.add(age);
		v.add(gender);
		v.add(address);
		v.add(occupation);
		v.add(acctype);
		v.add(contact);
		v.add(accnumber);
		v.add(amount);
		v.add(password);
		v.add(cpassword);
		System.out.println(v);

		if(process.equals("normal"))
		{
			DataBase.database data=new DataBase.database();
	    	data.setModify(v);
	    	result=data.getModify();
		}
		else if(process.equals("character"))
		{
			WASP.CharacterLevel character=new WASP.CharacterLevel();

	    	System.out.println("if blockkkk");
			character.calculate(v);
			status=character.injection;
		    System.out.println("result value "   +status);
		    type=character.typeofinjection;
		    System.out.println("injection  in modifyaction " +type);
		    //session.setAttribute("typeofinje",type );
		    request.setAttribute("typeofinje", type);
			 if(status.equals("sucess"))
		    {
		    	DataBase.database data=new DataBase.database();
		    	data.setModify(v);
		    	System.out.println("22222222222222222222");


		    	 result=data.getModify();
		    		System.out.println("result befor to redirect  "  +result);
		    }
			 System.out.println("redirect page  " +result);
		}
		else if(process.equals("positive"))
		{
         WASP.CharacterLevel character=new WASP.CharacterLevel();

	    	System.out.println("if blockkkk");
			character.calculate(v);
			status=character.injection;
		    System.out.println("result value "   +status);

			 if(status.equals("sucess"))
		    {
		    	DataBase.database data=new DataBase.database();
		    	data.setModify(v);
		    	System.out.println("22222222222222222222");


		    	 result=data.getModify();
		    		System.out.println("result befor to redirect  "  +result);
		    }

		}
		else if(process.equals("syntax"))
		{
			DataBase.databasesyntax datasyntax=new DataBase.databasesyntax();
			datasyntax.setModifydetails(name, dob, age, gender, address, occupation, acctype, contact, accnumber, amount, password, cpassword,"customerdetails");
		    String givequery=datasyntax.getModifydetails();
		    System.out.println("isduifhjdfudfjdfu "+givequery);
		    WASP.SyntaxAware syntax=new WASP.SyntaxAware();
		    syntax.function(givequery,"update");
		    syntax.setModifydetails();
		    name=syntax.getName();
			dob=syntax.getDob();
			age=syntax.getAge();
			gender=syntax.getGender();
		    address=syntax.getAddress();
			occupation=syntax.getOccupation();
			acctype=syntax.getAcctype();
			contact=syntax.getContact();
			amount=syntax.getAmount();
			accnumber=syntax.getAccountnumber();
			password=syntax.getPassword();
			cpassword=syntax.getCpassword();
			String tablename=syntax.getTablename();
			String runquery="update "+tablename+" set name='"+name+"',dob='"+dob+"',age='"+age+"',gender='"+gender+"',address='"+address+"',occupation='"+occupation+"',acctype='"+acctype+"',contactnumber='"+contact+"',amount='"+amount+"',password='"+password+"',cpassword='"+cpassword+"' where accountnumber='"+accnumber+"'";
		    System.out.println("dfrtrgvfv  " +runquery);
		    datasyntax.setRunquery(runquery);
		    result=datasyntax.getRunquery();

		}
		return mapping.findForward(result);
	}
}