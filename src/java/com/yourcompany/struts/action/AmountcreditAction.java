/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.yourcompany.struts.action;


import java.sql.*;
import java.util.Vector;


import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import com.yourcompany.struts.form.AmountcreditForm;

/**
 * MyEclipse Struts
 * Creation date: 08-21-2008
 *
 * XDoclet definition:
 * @struts.action path="/amountcredit" name="amountcreditForm" input="/form/amountcredit.jsp" scope="request" validate="true"
 * @struts.action-forward name="failure" path="/Amountcredit.jsp"
 * @struts.action-forward name="sucess" path="/Amountcredit.jsp"
 */
public class AmountcreditAction extends Action {
	/*
	 * Generated Methods
	 */

	/**
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws SQLException
	 * @throws ClassNotFoundException
	 * @throws SQLException
	 * @throws ClassNotFoundException
	 *
	 */

	public ActionForward execute(ActionMapping mapping, ActionForm form,
		 HttpServletRequest request, HttpServletResponse response) throws SQLException, ClassNotFoundException {
		 HttpSession session=request.getSession();
		 Class.forName("sun.jdbc.odbc.JdbcOdbcDriver");
		 Connection con=DriverManager.getConnection("jdbc:odbc:injection","sa","sa");
		 Statement st = con.createStatement();

		 AmountcreditForm amountcreditForm = (AmountcreditForm) form;// TODO Auto-generated method stub
		 String accountnumber=amountcreditForm.getAccountnumber();
		 String amount=amountcreditForm.getAmount();
		 System.out.println(amount);
		 double damount1=0;
		 double damount=0;
		 String status="";
		 String result="failure";
		 Vector v=new Vector();
		 v.add(accountnumber);
		 v.add(amount);
		 String type="";

		 ResultSet rs= st.executeQuery("select amount from customerdetails  where accountnumber="+accountnumber+"");
		 String dataamount="";
		 if(rs.next())
		 {
			  dataamount=rs.getString(1);
		 }
		 String process=(String)session.getAttribute("process");

		 System.out.println("sesssion avalue" +process +" amount  " +dataamount);
		 String finalamount="";


			if(process.equals("normal"))
			{
				DataBase.database data=new DataBase.database();
				System.out.println(accountnumber);
				damount1=Double.parseDouble(dataamount);
				damount=Double.parseDouble(amount);
				finalamount=""+(damount+damount1);
				System.out.println(finalamount);
		    	data.setAmountcredit(accountnumber,finalamount);
		    	result=data.getAmountcredit();
			}
			else if(process.equals("character"))
			{
				WASP.CharacterLevel character=new WASP.CharacterLevel();
		    	System.out.println("if blockkkk");
				character.calculate(v);
				status=character.injection;
			    System.out.println("result value "   +status);
			    type=character.typeofinjection;
			   // session.setAttribute("typeofinje", type);
			    request.setAttribute("typeofinje", type);
				 if(status.equals("sucess"))
			    {
			    	DataBase.database data=new DataBase.database();
			    	damount=Double.parseDouble(dataamount);
					damount=Double.parseDouble(amount);
					finalamount=""+(damount+damount1);
			    	data.setAmountcredit(accountnumber,finalamount);
			    	System.out.println("22222222222222222222");
			        result=data.getAmountcredit();
			    	System.out.println("result befor to redirect  "  +result);
			    }
				 System.out.println("redirect page  " +result);
			   }
				 else if(process.equals("syntax"))
				 {
					 DataBase.databasesyntax datasyntax=new DataBase.databasesyntax();
					 datasyntax.setAmountcreditquery("customerdetails",accountnumber,amount);
					 String givequery=datasyntax.getAmountcreditquery();
					 System.out.println(givequery);
					 WASP.SyntaxAware syntax=new WASP.SyntaxAware();
					 syntax.function(givequery,"update");
					 syntax.setAmountcredit();
					 String tablename=syntax.getTablename();
					 System.out.println("ddsceegrb " +tablename);
			         amount=syntax.getAmount();
			         int flength=amount.length();
			         int hlength=amount.indexOf("=");
			         amount=amount.substring(hlength+1, flength);
			         accountnumber=syntax.getAccountnumber();
			         flength=accountnumber.length();
			         hlength=accountnumber.indexOf("=");
			         accountnumber=accountnumber.substring(hlength+1, flength);
			         System.out.println("accountnumber " +accountnumber);
			         System.out.print("amountffdffhh " +amount);
			         double ba=Double.parseDouble(dataamount);
			         double a=Double.parseDouble(amount);
			         amount=""+(ba+a);
			         String runquery="update "+tablename+" set amount="+amount+" where accountnumber="+accountnumber+"";
			         datasyntax.setRunquery(runquery);
			         request.setAttribute("typeofinje",type);
			         result=datasyntax.getRunquery();
				 }

				 else if(process.equals("positive"))
				 {

					    WASP.CharacterLevel character=new WASP.CharacterLevel();
				    	System.out.println("if blockkkk in positive");
						character.calculate(v);
						status=character.injection;
					    System.out.println("result value in positive"   +status);
					    request.setAttribute("typeofinje",type);
					    //----
					    WASP.CharacterLevel character1=new WASP.CharacterLevel();
				    	System.out.println("if blockkkk");
						character.calculate(v);
						status=character.injection;
					    System.out.println("result value "   +status);
					    type=character.typeofinjection;
					   // session.setAttribute("typeofinje", type);
					    request.setAttribute("typeofinje", type);
						 if(status.equals("sucess"))
					    {
					    	DataBase.database data=new DataBase.database();
					    	damount=Double.parseDouble(dataamount);
							damount=Double.parseDouble(amount);
							finalamount=""+(damount+damount1);
					    	data.setAmountcredit(accountnumber,finalamount);
					    	System.out.println("22222222222222222222");
					        result=data.getAmountcredit();
					    	System.out.println("result befor to redirect  "  +result);
					    }
					    //---
						 /*if(status.equals("sucess"))
					    {
					    	DataBase.database data=new DataBase.database();
					    	damount=Double.parseDouble(dataamount);
							damount=Double.parseDouble(amount);
							finalamount=""+(damount+damount1);
					    	data.setAmountcredit(accountnumber,finalamount);

					        result=data.getAmountcredit();
					    	System.out.println("result befor to redirect  "  +result);
					    }
						 System.out.println("redirect page  " +result);*/
				 }

		   return mapping.findForward(result);
	}
}
